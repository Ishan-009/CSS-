/* ---------- Navigation ------- */

.main-nav-list {
  display: flex;
  align-items: center;
  list-style-type: none;
  text-decoration: none;
  gap: 3.2rem;
}

.main-nav-link:visited,
.main-nav-link:link {
  text-decoration: none;
  color: #333;
  font-weight: 500;
  font-size: 1.8rem;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
  color: #fff;
  background-color: #e67e22;
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #e67e22;
}

/* --------------=-------------------- */

/* -----------Hero Section-------------*/

.section-hero {
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  display: grid;
  grid-template-columns: 1fr 1fr;
  margin: 0 auto;
  max-width: 130rem;
  align-items: center;
  gap: 9.6rem;
  padding: 0 3.2rem;
}

.hero-img {
  width: 100%;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.5;
  margin-bottom: 4.8rem;
  font-weight: 500;
}

.hero-img {
  width: 100%;
}

/* Generic Helper class, "margin-right-sm" used in btn to add margin right as if I added this proeprty directly to button if I want to reuse that button css propety that could affect design of the button if used somewhere else */

.delivered-meals {
  display: flex;
  margin-top: 8rem;
  /* centered the meals container, and applied gap to have a gap between two elements which are images and text div element */
  align-items: center;
  gap: 1.6rem;
}

.deliverd-imgs {
  display: flex;
}

.deliverd-imgs img {
  height: 4.2rem;
  width: 4.2rem;
  border-radius: 50%;
  /* applied negative margin for image to overlay on each other effect which is very common with groupo of images of customer round images */
  margin-right: -1.6rem;
  /* applying border to images is useful for fine detailing */
  border: 3px solid #fdf2e9;
}
/* setting margin :0 for last child as we dont want to apply margin for last element to the right as it affects our layout */
.deliverd-imgs img:last-child {
  height: 4.2rem;
  width: 4.2rem;
  border-radius: 50%;
  margin: 0;
}

.delivered-text {
  font-weight: 600;
  font-size: 1.8rem;
}

.delivered-text span {
  /* using higher font-weight to stand out our figure 250,000 text in terms of visual heirarchy */
  font-weight: 700;
  font-size: 1.8rem;
  color: #cf711f;
  /* checking color contrasta between text color and background on coolrs website */
}
/* --------------------------------------------------- */

/* ----------------Featured In Section ------------------------- */

.section-featured {
  padding: 4.8rem 0 3.2rem 0;
}

.heading-featured-in {
  font-size: 1.4rem;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  font-weight: 500;
  text-align: center;
  margin-bottom: 2.4rem;
  color: #777;
}

.logos {
  display: flex;
  justify-content: space-around;
}

.logos img {
  height: 3.2rem;
  /* filter to reduce brightness and opactiy to 50% so that we could make our image icon grey so it could not catch too much visual attention */
  filter: brightness(0);
  opacity: 50%;
}
/* --------------------------------------------------- */

/* ----------How it works section ?-----------------  */

.section-how {
  padding: 9.6px 0;
}

.step-img {
  width: 35%;
  height: auto;
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
}

.step-description {
  font-size: 2rem;
  line-height: 1.8rem;
}

.step-img-box {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  /* z-index: 10; */
}
/* common pseduo element properites */
.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;
  border-radius: 50%;
  /* using position absolute and relative trick to center the content instead of flex or grid because its pseudo element not suitable to apply flex or grid as they are not actual dom elements so we have to used absolute positioning */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* --------------------------------------------------- */

/* using pseudo element so that we have cleaner way of definging circle background behind the image rather than adding div element ot html element */
.step-img-box::before {
  background-color: #fdf2e9;
  /* applied higher z index I want this to  behind the ::after pseudo element  */
  z-index: -2;
  /* 60% of parent width */
  width: 60%;
  /* using padding-bottom to define the height as pseudo element does not have height */
  padding-bottom: 60%;
  /* height: 60%; */
}
.step-img-box::after {
  background-color: #fae5d3;
  /* using z index to put this element behind the parent element*/
  z-index: -1;
  width: 45%;
  /* using padding-bottom to define the height as pseudo element does not have height */
  padding-bottom: 45%;
}

/* ----------------------------- Meals Section ------------------------------------- */

.section-meals {
  padding: 9.6rem 0;
}

.meal-img {
  width: 100%;
}

.meal-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 600;
  margin-bottom: 3.2rem;
}
.meal-attributes {
  list-style-type: none;
  display: flex;
  flex-direction: column;
  gap: 2.4rem;
}
.meal-attribute {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.meal-icon {
  width: 2.4rem;
  height: 2.4rem;
  color: #e67e22;
  /* you can use font size to style the icon to make them large  */
  /* font-size: 2.4rem; */
}

.tag {
  display: inline-block;
  padding: 0.4rem 0.8rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  color: #333;
  border-radius: 1000px;
  font-weight: 600;
}

.meal-tags {
  margin-bottom: 1.2rem;
  display: flex;
  gap: 0.4rem;
}

.meal {
  box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);
  border-radius: 11px;
  /* here after applying border radiues we cant see the roundness properly because the image is laying on top of element and covering the roundness basically overflowing the element so in order to fix that we have to make overflow property hidden */
  overflow: hidden;
}

/* wrapped all the meal content as we wanted padding in meal content not whole card alogn with image */
.meal-content {
  padding: 3.2rem 4.8rem 4.8rem 4.8rem;
}

.tag--vegetarian {
  background-color: #51cf66;
}
.tag--vegan {
  background-color: #82c91e;
}

.tag--paleo {
  background-color: #ffd43b;
}

.all-recipes {
  text-align: center;
  font-size: 1.8rem;
  width: 100%;
}

/* Here, we are applying hover property on meal card, using transform:translateY with negative value as we want it to move up */
/* Using transition for the effect , higher transtion seconds as eleemnt is larger */

/* using box shadow and make it one step larger according to our css styling and spacing system. and then decreasing opcacity as we go to source of light the shadow decreases in opacity */

/* a shadow that is more diffused and bigger basically  also naturally should be lighter */

.meal:hover {
  transform: translateY(-1.2rem);
  transition: all 0.4s;
  box-shadow: 0 3.2rem 6.4em rgba(0, 0, 0, 0.006);
}

/* *************Testimonials ************** */

.section-testimonials {
  background-color: #fdf2e9;
  display: grid;
  grid-template-columns: 55fr 45fr;
  /* to fix spacing in grid while it decreasing view port  */
  align-items: center;
}

.testimonial-container {
  padding: 9.6rem;
}

.testimonials {
  display: grid;
  grid-template-columns: 1fr 1fr;
  row-gap: 4.8rem;
  column-gap: 8rem;
}

.testimonial-img {
  width: 6.4rem;
  border-radius: 50%;
}

.testimonial-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 1.6rem;
}

.testimonial-name {
  font-size: 1.6rem;
  color: #6f6f6f;
}

.gallery {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1.6rem;
}

/* to fix our transform scaling of imaging to overflow the parent element we applied overflow hidden on parent itself so it would only scale up image within itself */
.gallery-item {
  overflow: hidden;
}

.gallery-item img {
  display: block;
  width: 100%;
  transition: all 0.4s;
}
/* applying scaling image along with transition for nice image hover scale effect */
.gallery-item img:hover {
  transform: scale(1.1);
}

/* ********************************************* */

/* -------------------------- Section Pricing--------------------------------- */

/* adding our common default padding to the section  */
.seciton-pricing {
  padding: 9.6rem 0;
}

.plan-header {
  text-align: center;
  margin-bottom: 4.8rem;
}

.plan-name {
  color: #cf711f;
  font-weight: 500;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  margin-bottom: 3.2rem;
}

.plan-price {
  font-size: 6.2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 1.6rem;
}

.plan-price span {
  font-size: 3rem;
  font-weight: 500;
  margin-right: 0.8rem;
}

.plan-text {
  font-size: 1.6rem;
  line-height: 1.6;
  color: #6f6f6f;
}

.plan-signup {
  text-align: center;
  margin-top: 4.8rem;
}

.pricing-plan {
  border-radius: 11px;
  /* giving width of 80% because we dont want grid content to occupy whole space as it leaves too much space so we specify specific width for pricing plan to occupify  */
  width: 80%;
  position: relative;
  overflow: hidden;
}

/* now here by default grid content of both pricing plan container is placed at left side but it is creating too much space between them so here we are doing is moving starter plan to the end of the grid so that with that between them there will be less space  */
.pricing-plan--starter {
  justify-self: end;
  border: 3px solid #fdf2e9;
  padding: 4.6rem;
}

.pricing-plan--complete {
  background-color: #fdf2e9;
  padding: 4.8rem;
}

/* here we are using pseduo class after element to get ribbon effect "best value" over the pricing box card */
.pricing-plan--complete::after {
  content: "Best Value";
  position: absolute;
  top: 6%;
  right: -18%;
  font-size: 1.4rem;
  font-weight: 700;
  background-color: #ffd43b;
  padding: 0.8rem 8rem;
  transform: rotate(45deg);
}

/* ------------------------------------------------------------------------------- */
